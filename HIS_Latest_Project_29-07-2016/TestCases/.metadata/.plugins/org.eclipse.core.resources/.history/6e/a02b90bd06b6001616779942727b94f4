import java.io.IOException;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.testng.Assert;
import org.testng.annotations.Test;


/**
 * This class is for TestNG Integration Test cases related to all
 * functionalities of OPD in HIS Project. developed by Nisal De Silva.
 * 
 * {@link BaseTestCase}
 * @author nisal.d
 * 
 */
public class ExamsTestCase extends BaseTestCase{
	
	public static final int SUCCESS_STATUS_CODE = 200;
	
	public static String examId;
	public static String visitId;
	public JSONArray jsonArray;
	
	
	/**
	 * This test case is for add New Exam
	 * 
	 * @throws IOException
	 */
	@Test(groups = "his.lab.test")
	public void addExamTestCase() throws IOException, JSONException {
	
		
		ArrayList<String> resArrayList = getHTTPResponse(
				properties.getProperty(TestCaseConstants.URL_APPEND_ADD_EXAMS), TestCaseConstants.HTTP_POST,
				RequestUtil.requestByID(TestCaseConstants.URL_APPEND_ADD_EXAMS));

		visitId = (new JSONObject(RequestUtil.requestByID(TestCaseConstants.URL_APPEND_ADD_EXAMS))).getString("visitid");
		
		System.out.println("Add Exam = "+ resArrayList.get(0));
		Assert.assertEquals(Integer.parseInt(resArrayList.get(1)), SUCCESS_STATUS_CODE);

	}
	
	/**
	 * This test case is to update examimations
	 * 
	 * @throws IOException
	 *             Signals that an I/O exception of some sort has occurred. This
	 *             class is the general class of exceptions produced by failed
	 *             or interrupted I/O operations.
	 * @throws JSONException
	 *             Exception throws when process Json
	 */
	@Test(groups = "his.lab.test", dependsOnMethods = { "addExamTestCase", "getExamsbyVisitIdTestCase" })
	public void updateExamTestCase() throws IOException, JSONException {

		// Get JSON Request body to send category update Request
		JSONObject jsonResponseObject = new JSONObject(RequestUtil.requestByID(TestCaseConstants.URL_APPEND_UPDATE_EXAMS));
		
		jsonResponseObject.put("patexamid", examId);
		
		// Send JSON Update allery Request
		ArrayList<String> resArrayList = getHTTPResponse(
				properties.getProperty(TestCaseConstants.URL_APPEND_UPDATE_EXAMS), TestCaseConstants.HTTP_POST,
				jsonResponseObject.toString());

		

		Assert.assertEquals(Integer.parseInt(resArrayList.get(1)), SUCCESS_STATUS_CODE);

	}
	
	/**
	 * This test case is for get exams by visit ID
	 * 
	 * @throws IOException
	 * @throws JSONException 
	 */
	@Test(groups = "his.lab.test", dependsOnMethods = { "addExamTestCase"})
	public void getExamsbyVisitIdTestCase() throws IOException, JSONException{

		ArrayList<String> resArrayList = getHTTPResponse(properties.getProperty(TestCaseConstants.URL_APPEND_GET_EXAMS_BY_VISITS)+visitId,
				TestCaseConstants.HTTP_GET, null);
		
		jsonArray = new JSONArray(resArrayList.get(0));
		
		
		
		JSONObject jsonObject = new JSONObject(RequestUtil.requestByID(TestCaseConstants.URL_APPEND_ADD_EXAMS));
		JSONObject jsonObject2 = jsonArray.getJSONObject(jsonArray.length()-1);
		
		System.out.println(jsonArray.getJSONObject(jsonArray.length()-1));
		examId = (jsonArray.getJSONObject(jsonArray.length() - 1)).getString("examID");
		System.out.println("examId = "+ examId);
		Assert.assertEquals(Integer.parseInt(resArrayList.get(1)), SUCCESS_STATUS_CODE);
		Assert.assertEquals(jsonObject2.getString("examHeight"),jsonObject.getString("Height"));
	}
	
	/**
	 * This test case is for get allergy by allergy ID
	 * 
	 * @throws IOException
	 * @throws JSONException 
	 */
	@Test(groups = "his.lab.test", dependsOnMethods = { "addExamTestCase", "getExamsbyVisitIdTestCase", "updateExamTestCase"})
	public void getExamsbyExamIdTestCase() throws IOException, JSONException{

		ArrayList<String> resArrayList = getHTTPResponse(properties.getProperty(TestCaseConstants.URL_APPEND_GET_EXAMS_BY_ID)+examId,
				TestCaseConstants.HTTP_GET, null);
		
		JSONObject jsonObject = new JSONObject(RequestUtil.requestByID(TestCaseConstants.URL_APPEND_UPDATE_EXAMS));
		
		jsonArray = new JSONArray(resArrayList.get(0));
		JSONObject jsonObject2 = jsonArray.getJSONObject(jsonArray.length()-1);
		
		
		Assert.assertEquals(Integer.parseInt(resArrayList.get(1)), SUCCESS_STATUS_CODE);
		Assert.assertEquals(jsonObject2.getDouble("examHeight"), jsonObject.getDouble("Height"));
	}
}
